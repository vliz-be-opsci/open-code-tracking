{
    "docker-compose.yml": "# this is a sample docker-compose of how to use kgap microservices\n# it functions as (1) a list of images to be build, (2) a usage-example and (3) a quick-test\nversion: \"3.7\"\n# -----------------------------------------------------------------------\nservices: \n  yasgui:\n    image: redpencil/yasgui:latest\n    container_name: test_kgap_yasgui\n    environment:\n      DEFAULT_SPARQL_ENDPOINT: \"http://localhost:7200/repositories/${GDB_REPO:-kgap}\" # that should be in the setup script | same exposed port as graphdb\n    ports:\n      - \"8080:80\"\n  graphdb:\n    build:\n      context: ./graphdb\n    image: ${REG_NS:-kgap}/kgap_graphdb:${BUILD_TAG:-latest}\n    container_name: test_kgap_graphdb\n    env_file:\n      - ./.env\n    #environment: \n      #GDB_REPO: kgap                       # default should be changed to reflect the name of your particular case\n      #GDB_HOME_FOLDER: /opt/graphdb/home/  # default might be changed to externalise/persist the storage \n    ports:\n      - 7200:7200     # HTTP\n    volumes:\n      - ./data:/root/graphdb-import/data\n      # todo later - consider mounted volumes for persistence of data ?\n\n  jupyter:\n    build:\n      context: ./jupyter\n    image: ${REG_NS:-kgap}/kgap_jupyter:${BUILD_TAG:-latest}\n    container_name: test_kgap_jupyter\n    ports:\n      - \"8889:8888\"\n    links:\n      - graphdb\n    volumes:\n      - \"./notebooks:/notebooks\"\n      - \"./data:/data\"\n    env_file:\n      - ./.env\n    environment:\n      GDB_BASE: \"http://graphdb:7200/\"\n      NOTEBOOK_ARGS: \"--NotebookApp.token=''\"\n    depends_on:\n      graphdb:\n        condition: service_healthy\n\n  sembench:\n    build:\n      context: ./sembench\n    image: ${REG_NS:-kgap}/kgap_sembench:${BUILD_TAG:-latest}\n    container_name: test_kgap_sembench\n    volumes:\n      - \"./data:/data\"\n    env_file:\n      - ./.env\n    # environment:\n    #   - INPUT_DATA_LOCATION=/data\n    #   - OUTPUT_DATA_LOCATION=/data\n    #   - SEMBENCH_DATA_LOCATION=/data\n    #   - SEMBENCH_CONFIG_PATH=/data/sembench.json\n    #   - SCHEDULER_INTERVAL_SECONDS=86400\n    depends_on:\n      graphdb:\n        condition: service_healthy"
}